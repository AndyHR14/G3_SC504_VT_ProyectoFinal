--1.Cursor de animales por tipo

CREATE OR REPLACE PROCEDURE ANIMALES_POR_TIPO(P_TIPO IN NUMBER) IS
  CURSOR C_ANIMALES(P_ID_TIPO NUMBER) IS
    SELECT ID_ANIMAL, NOMBRE_ANIMAL, EDAD, PESO
    FROM FIDE_ANIMAL_TB
    WHERE ID_TIPO = P_ID_TIPO;

  V_ID FIDE_ANIMAL_TB.ID_ANIMAL%TYPE;
  V_NOMBRE FIDE_ANIMAL_TB.NOMBRE_ANIMAL%TYPE;
  V_EDAD FIDE_ANIMAL_TB.EDAD%TYPE;
  V_PESO FIDE_ANIMAL_TB.PESO%TYPE;

BEGIN
  OPEN C_ANIMALES(P_TIPO);
  LOOP
    FETCH C_ANIMALES INTO V_ID, V_NOMBRE, V_EDAD, V_PESO;
    EXIT WHEN C_ANIMALES%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('ID: ' || V_ID || 
                         ' | NOMBRE: ' || V_NOMBRE || 
                         ' | EDAD: ' || V_EDAD || 
                         ' | PESO: ' || V_PESO);
  END LOOP;
  CLOSE C_ANIMALES;
END;
/

--2.Cursor de usuarios por Rol

CREATE OR REPLACE PROCEDURE USUARIOS_POR_ROL(P_ROL IN NUMBER) IS
  CURSOR C_USUARIOS(P_ID_ROL NUMBER) IS
    SELECT ID_USUARIO, NOMBRE, TELEFONO, CORREO
    FROM FIDE_USUARIO_TB
    WHERE ID_ROL = P_ID_ROL;

  V_ID FIDE_USUARIO_TB.ID_USUARIO%TYPE;
  V_NOMBRE FIDE_USUARIO_TB.NOMBRE%TYPE;
  V_TELEFONO FIDE_USUARIO_TB.TELEFONO%TYPE;
  V_CORREO FIDE_USUARIO_TB.CORREO%TYPE;

BEGIN
  OPEN C_USUARIOS(P_ROL);
  LOOP
    FETCH C_USUARIOS INTO V_ID, V_NOMBRE, V_TELEFONO, V_CORREO;
    EXIT WHEN C_USUARIOS%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('ID: ' || V_ID || 
                         ' | NOMBRE: ' || V_NOMBRE || 
                         ' | TELEFONO: ' || V_TELEFONO || 
                         ' | CORREO: ' || V_CORREO);
  END LOOP;
  CLOSE C_USUARIOS;
END;
/

--3.Cursor de productos por categoria
CREATE OR REPLACE PROCEDURE PRODUCTOS_POR_CATEGORIA(P_CATEGORIA IN NUMBER) IS
  CURSOR C_PRODUCTOS(P_ID_CATEGORIA NUMBER) IS
    SELECT ID_PRODUCTO, NOMBRE, ID_UNIDAD_MEDIDA, ID_ESTADO
    FROM FIDE_PRODUCTO_TB
    WHERE ID_CATEGORIA = P_ID_CATEGORIA;

  V_ID FIDE_PRODUCTO_TB.ID_PRODUCTO%TYPE;
  V_NOMBRE FIDE_PRODUCTO_TB.NOMBRE%TYPE;
  V_UMEDIDA FIDE_PRODUCTO_TB.ID_UNIDAD_MEDIDA%TYPE;
  V_ESTADO FIDE_PRODUCTO_TB.ID_ESTADO%TYPE;

BEGIN
  OPEN C_PRODUCTOS(P_CATEGORIA);
  LOOP
    FETCH C_PRODUCTOS INTO V_ID, V_NOMBRE, V_UMEDIDA, V_ESTADO;
    EXIT WHEN C_PRODUCTOS%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('ID: ' || V_ID || 
                         ' | NOMBRE: ' || V_NOMBRE || 
                         ' | UNIDAD_MEDIDA: ' || V_UMEDIDA || 
                         ' | ESTADO: ' || V_ESTADO);
  END LOOP;
  CLOSE C_PRODUCTOS;
END;
/

--4.Cursor de animales por habitat

CREATE OR REPLACE PROCEDURE ANIMALES_POR_HABITAT(P_HABITAT IN NUMBER) IS
  CURSOR C_ANIMALES(P_ID_HABITAT NUMBER) IS
    SELECT ID_ANIMAL, NOMBRE_ANIMAL, EDAD, PESO
    FROM FIDE_ANIMAL_TB
    WHERE ID_HABITAT = P_ID_HABITAT;

  V_ID FIDE_ANIMAL_TB.ID_ANIMAL%TYPE;
  V_NOMBRE FIDE_ANIMAL_TB.NOMBRE_ANIMAL%TYPE;
  V_EDAD FIDE_ANIMAL_TB.EDAD%TYPE;
  V_PESO FIDE_ANIMAL_TB.PESO%TYPE;

BEGIN
  OPEN C_ANIMALES(P_HABITAT);
  LOOP
    FETCH C_ANIMALES INTO V_ID, V_NOMBRE, V_EDAD, V_PESO;
    EXIT WHEN C_ANIMALES%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('ID: ' || V_ID || 
                         ' | NOMBRE: ' || V_NOMBRE || 
                         ' | EDAD: ' || V_EDAD || 
                         ' | PESO: ' || V_PESO);
  END LOOP;
  CLOSE C_ANIMALES;
END;
/
--5.Cursor de direcciones por usuario
CREATE OR REPLACE PROCEDURE DIRECCIONES_POR_USUARIO(P_USUARIO IN NUMBER) IS
  CURSOR C_DIRECCIONES(P_ID_USUARIO NUMBER) IS
    SELECT ID_DIRECCION, DETALLE_DIRECCION, ID_PAIS, ID_PROVINCIA
    FROM FIDE_DIRECCION_TB
    WHERE ID_USUARIO = P_ID_USUARIO;

  V_ID FIDE_DIRECCION_TB.ID_DIRECCION%TYPE;
  V_DETALLE FIDE_DIRECCION_TB.DETALLE_DIRECCION%TYPE;
  V_PAIS FIDE_DIRECCION_TB.ID_PAIS%TYPE;
  V_PROVINCIA FIDE_DIRECCION_TB.ID_PROVINCIA%TYPE;

BEGIN
  OPEN C_DIRECCIONES(P_USUARIO);
  LOOP
    FETCH C_DIRECCIONES INTO V_ID, V_DETALLE, V_PAIS, V_PROVINCIA;
    EXIT WHEN C_DIRECCIONES%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('ID: ' || V_ID || 
                         ' | DETALLE: ' || V_DETALLE || 
                         ' | PAIS: ' || V_PAIS || 
                         ' | PROVINCIA: ' || V_PROVINCIA);
  END LOOP;
  CLOSE C_DIRECCIONES;
END;
/
--6.Cursor de facturas por usuario
CREATE OR REPLACE PROCEDURE FACTURAS_POR_USUARIO(P_USUARIO IN NUMBER) IS
  CURSOR C_FACTURAS(P_ID_USUARIO NUMBER) IS
    SELECT ID_FACTURA, FECHA_REGISTRO, MONTO_TOTAL, SUBTOTAL
    FROM FIDE_FACTURA_TB
    WHERE ID_USUARIO = P_ID_USUARIO;

  V_ID FIDE_FACTURA_TB.ID_FACTURA%TYPE;
  V_FECHA FIDE_FACTURA_TB.FECHA_REGISTRO%TYPE;
  V_MONTO FIDE_FACTURA_TB.MONTO_TOTAL%TYPE;
  V_SUBTOTAL FIDE_FACTURA_TB.SUBTOTAL%TYPE;

BEGIN
  OPEN C_FACTURAS(P_USUARIO);
  LOOP
    FETCH C_FACTURAS INTO V_ID, V_FECHA, V_MONTO, V_SUBTOTAL;
    EXIT WHEN C_FACTURAS%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('FACTURA ID: ' || V_ID || 
                         ' | FECHA: ' || V_FECHA || 
                         ' | MONTO: ' || V_MONTO || 
                         ' | SUBTOTAL: ' || V_SUBTOTAL);
  END LOOP;
  CLOSE C_FACTURAS;
END;
/
--7.Cursor de detalle de factura por factura
CREATE OR REPLACE PROCEDURE DETALLE_FACTURA_POR_FACTURA(P_FACTURA IN NUMBER) IS
  CURSOR C_DETALLE(P_ID_FACTURA NUMBER) IS
    SELECT ID_DETALLE, CANTIDAD, PRECIO_UNITARIO, TOTAL
    FROM FIDE_DETALLE_FACTURA_TB
    WHERE ID_FACTURA = P_ID_FACTURA;

  V_ID FIDE_DETALLE_FACTURA_TB.ID_DETALLE%TYPE;
  V_CANTIDAD FIDE_DETALLE_FACTURA_TB.CANTIDAD%TYPE;
  V_PRECIO FIDE_DETALLE_FACTURA_TB.PRECIO_UNITARIO%TYPE;
  V_TOTAL FIDE_DETALLE_FACTURA_TB.TOTAL%TYPE;

BEGIN
  OPEN C_DETALLE(P_FACTURA);
  LOOP
    FETCH C_DETALLE INTO V_ID, V_CANTIDAD, V_PRECIO, V_TOTAL;
    EXIT WHEN C_DETALLE%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('DETALLE ID: ' || V_ID || 
                         ' | CANTIDAD: ' || V_CANTIDAD || 
                         ' | PRECIO: ' || V_PRECIO || 
                         ' | TOTAL: ' || V_TOTAL);
  END LOOP;
  CLOSE C_DETALLE;
END;
/
--8.Cursor de inventario por producto
CREATE OR REPLACE PROCEDURE INVENTARIO_POR_PRODUCTO(P_PRODUCTO IN NUMBER) IS
  CURSOR C_INVENTARIO(P_ID_PRODUCTO NUMBER) IS
    SELECT ID_INVENTARIO, CANTIDAD, FECHA_INGRESO
    FROM FIDE_INVENTARIO_TB
    WHERE ID_PRODUCTO = P_ID_PRODUCTO;

  V_ID FIDE_INVENTARIO_TB.ID_INVENTARIO%TYPE;
  V_CANTIDAD FIDE_INVENTARIO_TB.CANTIDAD%TYPE;
  V_FECHA FIDE_INVENTARIO_TB.FECHA_INGRESO%TYPE;

BEGIN
  OPEN C_INVENTARIO(P_PRODUCTO);
  LOOP
    FETCH C_INVENTARIO INTO V_ID, V_CANTIDAD, V_FECHA;
    EXIT WHEN C_INVENTARIO%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('INVENTARIO ID: ' || V_ID || 
                         ' | CANTIDAD: ' || V_CANTIDAD || 
                         ' | FECHA INGRESO: ' || V_FECHA);
  END LOOP;
  CLOSE C_INVENTARIO;
END;
/
